[tool.poetry]
name = "saat"
version = "2.0.0"
description = "Solution Architecture Agent Toolkit - AI-powered C4 architecture discovery and documentation using PydanticAI"
authors = ["David R Oliver <david@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/DavidROliverBA/SAAT"
repository = "https://github.com/DavidROliverBA/SAAT"
keywords = ["architecture", "c4", "ai", "agents", "pydantic", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic-ai = "^0.0.14"
pydantic = "^2.0"
click = "^8.1.0"
pyyaml = "^6.0"
httpx = "^0.27.0"
logfire = {version = "^0.51.0", optional = true}
anthropic = "^0.39.0"
openai = {version = "^1.0.0", optional = true}
google-generativeai = {version = "^0.8.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
black = "^24.0.0"
ruff = "^0.6.0"
mypy = "^1.11.0"
pytest-cov = "^5.0.0"

[tool.poetry.extras]
logfire = ["logfire"]
openai = ["openai"]
gemini = ["google-generativeai"]
all = ["logfire", "openai", "google-generativeai"]

[tool.poetry.scripts]
saat = "saat.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=saat --cov-report=term-missing"
